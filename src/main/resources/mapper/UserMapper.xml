<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="oneblog.dao.UserMapper">
    <resultMap id="BaseResultMap" type="oneblog.model.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="introduction" property="introduction" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="register_time" property="registerTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="role_id" property="roleId" jdbcType="TINYINT"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, phone, user_name, password, sex, real_name, birthday, email, introduction,
    salt, avatar, register_time, status, `type`, role_id
  </sql>
    <select id="selectByIdWithPwd" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
        and password = #{password, jdbcType=VARCHAR}
    </select>
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_name = #{name,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="oneblog.model.User">
    insert into user (user_id, phone, user_name, 
      password, sex, real_name, 
      birthday, email, introduction, 
      salt, avatar, register_time,
      status, type)
    values (#{userId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{email,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=TINYINT}, #{type,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="oneblog.model.User" useGeneratedKeys="true" keyProperty="userId">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="registerTime != null">
                register_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null">
                #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="oneblog.model.User">
        update user
        <set>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null">
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                register_time = #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=TINYINT},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="oneblog.model.User">
    update user
    set phone = #{phone,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      email = #{email,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
    <select id="count" resultType="java.lang.Long">
        select count(1) from user
    </select>
</mapper>